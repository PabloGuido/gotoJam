local datos = require("main.datos")
local botonera_x = datos.screen_size[1]/2;
local botonera_y = datos.screen_size[2] - 80;
-- Vars funciones
local activar_boton;
local boton_selecto;
local desactivar_barra;
local apagar_boton_selecto;
local parar_barra;
function init(self)
	-- Nodos
	self.botonera = gui.get_node("caja_botonera");
	self.vacc = gui.get_node("vacuna"); 
	self.pasti = gui.get_node("pasti");
	self.curita = gui.get_node("curita");
	self.comida = gui.get_node("comida");
	self.boton_selecto = gui.get_node("boton_selecto");
	gui.set_enabled(self.boton_selecto, false);

	-- Posicion botonera
	gui.set_position(self.botonera, vmath.vector3(botonera_x,botonera_y,0));

	-- Flags
	self.boton_activo = false;

	-- Input
	msg.post("", "acquire_input_focus");
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.1, 0.25, 0.25, 0) } )
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)

	if gui.pick_node(self.vacc, action.x, action.y) and action.pressed then
		activar_boton(self, self.vacc);
	elseif gui.pick_node(self.pasti, action.x, action.y) and action.pressed then
		activar_boton(self, self.pasti);
	elseif gui.pick_node(self.curita, action.x, action.y) and action.pressed then
		activar_boton(self, self.curita);
	elseif gui.pick_node(self.comida, action.x, action.y) and action.pressed then
		activar_boton(self, self.comida);
	elseif self.boton_activo ~= false and action.pressed then
		print("Desactivar barra 1");
		desactivar_barra(self);
	end
	
end

activar_boton = function(self, nombre_de_boton)
	if self.boton_activo == false then
		self.boton_activo = gui.get_id(nombre_de_boton);
		boton_selecto(self, gui.get_position(nombre_de_boton));
		print(self.boton_activo);
		msg.post("barra_colores#barra_colores", "activar_barra")
	elseif self.boton_activo ~= gui.get_id(nombre_de_boton) then
		print("Desactivar barra 2");
		desactivar_barra(self);
	elseif self.boton_activo == gui.get_id(nombre_de_boton) then
		print("Parar barra ** botones.gui");
		parar_barra(self);
	end
end

boton_selecto = function(self, pos)
	gui.set_enabled(self.boton_selecto, true);
	gui.set_position(self.boton_selecto, pos);
end
apagar_boton_selecto = function(self)
	gui.set_enabled(self.boton_selecto, false);
end


desactivar_barra = function(self)
	apagar_boton_selecto(self);
	msg.post("barra_colores#barra_colores", "desactivar_barra");
	self.boton_activo = false;
	
end

parar_barra = function(self)
	msg.post("barra_colores#barra_colores", "parar_barra");
end
















