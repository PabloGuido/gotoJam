local datos = require("main.datos")
local botonera_x = datos.screen_size[1]/2;
local botonera_y = datos.screen_size[2] - 160;

-- Hashes
local activar_barra_msg = hash("activar_barra");
local desactivar_barra_msg = hash("desactivar_barra");
local parar_barra_msg = hash("parar_barra");
function init(self)
	-- Nodos
	self.barra = gui.get_node("caja_colores");
	-- Posicion botonera
	gui.set_position(self.barra, vmath.vector3(botonera_x,botonera_y,0));
	
	--
	gui.set_enabled(self.barra, false);
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == activar_barra_msg then
		gui.set_enabled(self.barra, true);
	elseif message_id == desactivar_barra_msg then
		gui.set_enabled(self.barra, false);
	elseif message_id == parar_barra_msg then
		print("Parar barra ** barra_colores");
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
